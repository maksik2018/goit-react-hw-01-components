{"version":3,"sources":["components/Profile/Profile.module.css","components/Transactions/Transactions.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.jsx","components/FriendList/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/Statistics/Statistics.jsx","components/Transactions/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","style","profile","description","src","alt","item","quantity","FriendListItem","isOnline","id","online","offline","width","FriendList","friends","map","friend","Statistics","title","css","statistics","statisticsList","label","percentage","backgroundColor","randomColor","TransactionHistory","items","transactionHistory","thead","th","tbody","type","amount","currency","td","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26670532.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2fsyZ\",\"description\":\"Profile_description__2AyNn\",\"avatar\":\"Profile_avatar__2PQpn\",\"stats\":\"Profile_stats__2g414\",\"item\":\"Profile_item__1lT3w\",\"quantity\":\"Profile_quantity__3lbmK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transactions_transactionHistory__1U_E-\",\"thead\":\"Transactions_thead__2zOzd\",\"tbody\":\"Transactions_tbody__2wK3M\",\"th\":\"Transactions_th__3G4NQ\",\"td\":\"Transactions_td__3XUg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__D8FnN\",\"title\":\"Statistics_title__cPQnZ\",\"item\":\"Statistics_item__mQlNt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendList_status__1OyUQ\",\"online\":\"FriendList_online__2r7yB FriendList_status__1OyUQ\",\"offline\":\"FriendList_offline__1GAGt FriendList_status__1OyUQ\",\"item\":\"FriendList_item__KFhFV\",\"avatar\":\"FriendList_avatar__38YfW\"};","import PropTypes from 'prop-types';\r\nimport style from './Profile.module.css';\r\n\r\nfunction Profile ({ name, tag, location, avatar, stats }) {\r\n    const { followers, views, likes } = stats;\r\n    return (<div className={style.profile}>\r\n    <div className={style.description}>\r\n      <img\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n        className={style.avatar}\r\n      />\r\n      <p className=\"name\">{name}</p>\r\n      <p className=\"tag\">@{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n  \r\n    <ul className={style.stats}>\r\n      <li className = {style.item}>\r\n        <span className=\"label\">Followers</span>\r\n        <span className={style.quantity}>{followers}</span>\r\n      </li>\r\n      <li className ={style.item}>\r\n        <span className=\"label\">Views</span>\r\n        <span className={style.quantity}>{views}</span>\r\n      </li>\r\n      <li className = {style.item}>\r\n        <span className=\"label\">Likes</span>\r\n        <span className={style.quantity}>{likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div> );\r\n}\r\n\r\nProfile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n\r\n};\r\n\r\nexport default Profile;","import PropTypes from 'prop-types';\r\nimport style from '../FriendList/FriendList.module.css';\r\n\r\nfunction FriendListItem ({avatar, name, isOnline, id}) {\r\n    return (\r\n<li className={style.item}>\r\n  <span className={isOnline ? style.online : style.offline}>{isOnline}</span>\r\n  <img className={style.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n  <p className={style.name}>{name}</p>\r\n</li>\r\n    );\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n    \r\n};\r\n\r\nexport default FriendListItem;","import PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\n\r\nfunction FriendList ({friends}) {\r\n    return (\r\n\r\n        <ul className=\"friend-list\"> {friends.map((friend) =>\r\n        // ( <li key={friend.id}>\r\n            \r\n            <FriendListItem\r\n            key={friend.id}\r\n            avatar={friend.avatar}\r\n            name={friend.name}\r\n            isOnline={friend.isOnline}\r\n            />\r\n            \r\n        )}\r\n \r\n</ul>\r\n\r\n    )};\r\n\r\n    FriendList.propTypes = {\r\n        friends: PropTypes.array.isRequired,\r\n        id: PropTypes.number,\r\n      };\r\n\r\n\r\n\r\nexport default FriendList;\r\n\r\n","import PropTypes from 'prop-types';\r\nimport css from './Statistics.module.css';\r\nimport randomColor from 'randomcolor';\r\n\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <section className={css.statistics}>\r\n      {title && <h2 className={css.title}>{title}</h2>}\r\n      <ul className={css.statisticsList}>\r\n        {stats.map(({id, label, percentage}) => (\r\n          <li\r\n            style={{ backgroundColor: randomColor() }}\r\n            key={id}\r\n            className={css.item}\r\n          >\r\n            <span className={css.label}>{label}</span>\r\n            <span className={css.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\nexport default Statistics;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import PropTypes from 'prop-types';\r\n// import css from './Statistics.module.css';\r\n// import randomColor from 'randomcolor';\r\n\r\n// function Statistics ( {title}, {statistics} ) {\r\n//     return (\r\n//          <section className={css.statistics}>\r\n//         {title && <h2 className={css.title}>{title}</h2>}\r\n//     <ul className={css.statList}>\r\n//       { statistics.map(({ id, label, percentage}) => ( \r\n//       <li\r\n//           style={{ backgroundColor: randomColor() }}\r\n//           key={id}\r\n//           className={css.item}\r\n//         >\r\n//              <span className={css.label}>{label}</span>\r\n//             <span className={css.percentage}>{percentage}</span>\r\n//           </li>\r\n            \r\n//       ))}\r\n\r\n//        </ul>\r\n// </section>\r\n//     )\r\n//   };\r\n\r\n// // Statistics.propTypes = {\r\n// //     title: PropTypes.string.isRequired,\r\n// //   }\r\n// Statistics.propTypes = {\r\n//   title: PropTypes.string,\r\n//   stats: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       label: PropTypes.string.isRequired,\r\n//       percentage: PropTypes.number.isRequired,\r\n//     }).isRequired,\r\n//   ).isRequired,\r\n// };\r\n\r\n\r\n// export default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport css from './Transactions.module.css';\r\n\r\nfunction TransactionHistory ({ items }) {\r\n    return (\r\n        <table className={css.transactionHistory}>\r\n        <thead className={css.thead}>\r\n          <tr>\r\n            <th className={css.th}>Type</th>\r\n            <th className={css.th}>Amount</th>\r\n            <th className={css.th}>Currency</th>\r\n          </tr>\r\n        </thead>\r\n      \r\n        <tbody className={css.tbody}>\r\n            {items.map(({id, type, amount, currency}) =>\r\n                ( \r\n                <tr key={id}>\r\n                    <td className={css.td}>{type}</td>\r\n                    <td className={css.td}>{amount}</td>\r\n                    <td className={css.td}>{currency}</td>\r\n                  </tr>\r\n                  \r\n             ))}\r\n          \r\n        </tbody>\r\n      </table>\r\n      )}\r\n\r\n      TransactionHistory.propTypes = {\r\n          items: PropTypes.arrayOf(\r\n              PropTypes.shape({\r\n                  id: PropTypes.string.isRequired,\r\n                  type: PropTypes.string.isRequired,\r\n                  amount: PropTypes.string.isRequired,\r\n                  currency: PropTypes.string.isRequired,\r\n              }).isRequired,\r\n          ).isRequired,\r\n           \r\n                }\r\n    \r\n\r\nexport default TransactionHistory;","import './App.css';\nimport Profile from './components/Profile/Profile.jsx';\nimport FriendList from './components/FriendList/FriendList.jsx';\nimport user from './user.json';\nimport friends from './friends.json';\nimport statisticalData from './statistical-data.json';\nimport Statistics from './components/Statistics/Statistics.jsx';\nimport transactions from './transactions.json';\nimport TransactionHistory from './components/Transactions/TransactionHistory.jsx';\n\nfunction App() {\n  return (\n    <div>\n    <Profile\n  name={user.name}\n  tag={user.tag}\n  location={user.location}\n  avatar={user.avatar}\n  stats={user.stats}\n/>\n<FriendList friends={friends} />\n<Statistics title=\"Upload stats\" stats={statisticalData} />\n<TransactionHistory items={transactions} />\n</div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}